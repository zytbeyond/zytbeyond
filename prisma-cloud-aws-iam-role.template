{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Mappings": {
    "EventBridgeMap": {
      "EventBridgeRuleNamePrefix": {
        "Value": "prisma-cloud-eb-a-1176399931679034368-*"
      }
    }
  },
  "Description": "Prisma Cloud IAM Role to set permissions",
  "Metadata": {
    "DownloadDate": "2023-11-22 13:47"
  },
  "Parameters": {
    "PrismaCloudRoleName": {
      "Type": "String",
      "Description": "Provide an role ARN name (Example: PrismaCloudRole). Maximum 64 characters allowed",
      "AllowedPattern": "[-_a-zA-Z0-9]+",
      "Default": "PrismaCloudRole-1176399931679034368",
      "MaxLength": 64,
      "MinLength": 1
    }
  },
  "Resources": {
    "PrismaCloudRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:iam::aws:policy/SecurityAudit"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:iam::",
                {
                  "Ref": "AWS::AccountId"
                },
                ":policy/",
                "prisma_cloud_1-1176399931679034368",
                "-",
                {
                  "Ref": "PrismaCloudRoleName"
                }
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:iam::",
                {
                  "Ref": "AWS::AccountId"
                },
                ":policy/",
                "prisma_cloud_2-1176399931679034368",
                "-",
                {
                  "Ref": "PrismaCloudRoleName"
                }
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:iam::",
                {
                  "Ref": "AWS::AccountId"
                },
                ":policy/",
                "prisma_cloud_3-1176399931679034368",
                "-",
                {
                  "Ref": "PrismaCloudRoleName"
                }
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:iam::",
                {
                  "Ref": "AWS::AccountId"
                },
                ":policy/",
                "prisma_cloud_4-1176399931679034368",
                "-",
                {
                  "Ref": "PrismaCloudRoleName"
                }
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:iam::",
                {
                  "Ref": "AWS::AccountId"
                },
                ":policy/",
                "prisma_cloud_5-1176399931679034368",
                "-",
                {
                  "Ref": "PrismaCloudRoleName"
                }
              ]
            ]
          }
        ],
        "MaxSessionDuration": 43200,
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  "arn:aws:iam::188619942792:root"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ],
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "d9ef8bba-f09b-44e3-b375-00be583a87a9"
                }
              }
            }
          ]
        },
        "RoleName": {
          "Ref": "PrismaCloudRoleName"
        }
      },
      "DependsOn": [
        "prismacloud5",
        "prismacloud1",
        "prismacloud2",
        "prismacloud3",
        "prismacloud4"
      ]
    },
    "prismacloud1": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": {
          "Fn::Join": [
            "",
            [
              "prisma_cloud_1-1176399931679034368",
              "-",
              {
                "Ref": "PrismaCloudRoleName"
              }
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PrismaCloudFlowlogs1",
              "Effect": "Allow",
              "Action": [
                "logs:GetLogEvents"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudPCCAgentlessKMSListKeys8",
              "Effect": "Allow",
              "Action": [
                "kms:ListKeys"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudAuditEventsCloudTrail1",
              "Effect": "Allow",
              "Action": [
                "cloudtrail:LookupEvents"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudPCCAgentlessSSM12",
              "Effect": "Allow",
              "Action": [
                "ssm:GetParameter",
                "ssm:GetParameters"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudPCCAgentlessSTS4",
              "Effect": "Allow",
              "Action": [
                "sts:DecodeAuthorizationMessage",
                "sts:GetCallerIdentity"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudElasticBeanstalk5",
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::elasticbeanstalk-*/*"
                  ]
                ]
              }
            },
            {
              "Sid": "PrismaCloudGuardduty1",
              "Effect": "Allow",
              "Action": [
                "guardduty:GetDetector",
                "guardduty:GetFindings",
                "guardduty:ListDetectors",
                "guardduty:ListFindings"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudPCCAgentlessKMSCreateKey6",
              "Effect": "Allow",
              "Action": [
                "kms:CreateKey"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/created-by": "prismacloud-agentless-scan"
                }
              },
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudPCCAgentlessKMSCreateGrant10",
              "Effect": "Allow",
              "Action": [
                "kms:CreateGrant"
              ],
              "Condition": {
                "Bool": {
                  "kms:GrantIsForAWSResource": true
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:*:*:key/*"
                  ]
                ]
              }
            },
            {
              "Sid": "PrismaCloudPCCAgentlessNetworkActions5",
              "Effect": "Allow",
              "Action": [
                "ec2:CreateInternetGateway",
                "ec2:CreateSubnet",
                "ec2:CreateVpc"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/created-by": "prismacloud-agentless-scan"
                }
              },
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudPCCAgentlessKMSTagResource14",
              "Effect": "Allow",
              "Action": [
                "kms:TagResource"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/created-by": "prismacloud-agentless-scan"
                }
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:*:*:key/*"
                  ]
                ]
              }
            },
            {
              "Sid": "PrismaCloudPCCAgentlessKMS3",
              "Effect": "Allow",
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:ReEncryptFrom",
                "kms:ReEncryptTo"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:*:*:key/*"
                  ]
                ]
              }
            },
            {
              "Sid": "PrismaCloudPrismaCloudPCCAgentlessCopySnapshots7",
              "Effect": "Allow",
              "Action": [
                "ec2:CopySnapshot"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/created-by": "prismacloud-agentless-scan"
                }
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ec2:*::snapshot/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "PrismaCloudComputeAgentless1",
              "Effect": "Allow",
              "Action": [
                "ec2:CreateRoute",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeInstanceTypes",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeRouteTables",
                "ec2:DescribeVpcs"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudPCCAgentlessServiceLinkedRole11",
              "Effect": "Allow",
              "Action": [
                "iam:CreateServiceLinkedRole"
              ],
              "Condition": {
                "StringLike": {
                  "iam:AWSServiceName": "spot.amazonaws.com"
                }
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::*:role/aws-service-role/spot.amazonaws.com/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "PrismaCloudEBRuleStatusPermissions2",
              "Effect": "Allow",
              "Action": [
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetEventSelectors",
                "cloudtrail:GetTrailStatus",
                "ec2:DescribeRegions",
                "events:DescribeApiDestination",
                "events:DescribeConnection",
                "events:DescribeRule",
                "events:ListTargetsByRule"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudPCCAgentlessRW2",
              "Effect": "Allow",
              "Action": [
                "ec2:CreateSnapshot",
                "ec2:CreateSnapshots",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInstances",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSnapshots",
                "ec2:DescribeSubnets",
                "ec2:DescribeVolumes",
                "ec2:RunInstances",
                "iam:SimulatePrincipalPolicy"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudInspector1",
              "Effect": "Allow",
              "Action": [
                "inspector:DescribeAssessmentTemplates",
                "inspector:DescribeFindings",
                "inspector:DescribeRulesPackages",
                "inspector:ListAssessmentRunAgents",
                "inspector:ListAssessmentRuns",
                "inspector:ListAssessmentTemplates",
                "inspector:ListFindings",
                "inspector:ListRulesPackages"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudEBRuleManagementPermissions1",
              "Effect": "Allow",
              "Action": [
                "events:DeleteRule",
                "events:DisableRule",
                "events:EnableRule",
                "events:PutRule",
                "events:RemoveTargets"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":events:*:",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":rule/",
                      {
                        "Fn::FindInMap": [
                          "EventBridgeMap",
                          "EventBridgeRuleNamePrefix",
                          "Value"
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "PrismaCloudPCCAgentlessRM9",
              "Effect": "Allow",
              "Action": [
                "ec2:AttachInternetGateway",
                "ec2:CreateSubnet",
                "ec2:DeleteInternetGateway",
                "ec2:DeleteSnapshot",
                "ec2:DeleteSubnet",
                "ec2:DeleteVpc",
                "ec2:DetachInternetGateway",
                "ec2:ModifySnapshotAttribute",
                "ec2:TerminateInstances"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:ResourceTag/created-by": "prismacloud-agentless-scan"
                }
              },
              "Resource": "*"
            }
          ]
        }
      }
    },
    "prismacloud2": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": {
          "Fn::Join": [
            "",
            [
              "prisma_cloud_2-1176399931679034368",
              "-",
              {
                "Ref": "PrismaCloudRoleName"
              }
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PrismaCloudComputeServerlessScan1",
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeImages",
                "iam:GetPolicy",
                "iam:GetPolicyVersion",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:ListAttachedRolePolicies",
                "iam:ListRolePolicies",
                "iam:SimulatePrincipalPolicy",
                "kms:Decrypt",
                "lambda:DeleteLayerVersion",
                "lambda:GetFunction",
                "lambda:GetFunctionConfiguration",
                "lambda:GetLayerVersion",
                "lambda:ListFunctions",
                "lambda:ListLayerVersions",
                "lambda:ListLayers",
                "lambda:PublishLayerVersion",
                "lambda:UpdateFunctionConfiguration"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudPCCAgentlessTags13",
              "Effect": "Allow",
              "Action": [
                "ec2:CreateTags"
              ],
              "Condition": {
                "StringEquals": {
                  "aws:RequestTag/created-by": "prismacloud-agentless-scan"
                }
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ec2:*::snapshot/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ec2:*:*:instance/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ec2:*:*:vpc/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ec2:*:*:subnet/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ec2:*:*:internet-gateway/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ec2:*:*:volume/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "PrismaCloudBridgecrew1",
              "Effect": "Allow",
              "Action": [
                "cloudformation:DescribeStackResources",
                "cloudformation:GetTemplate",
                "cloudformation:ListStacks",
                "ecr:BatchCheckLayerAvailability",
                "ecr:BatchGetImage",
                "ecr:BatchGetRepositoryScanningConfiguration",
                "ecr:DescribeImageReplicationStatus",
                "ecr:DescribeImageScanFindings",
                "ecr:DescribePullThroughCacheRules",
                "ecr:DescribeRegistry",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetLifecyclePolicyPreview",
                "ecr:GetRegistryPolicy",
                "ecr:ListImages",
                "lambda:GetEventSourceMapping",
                "lambda:GetFunction",
                "lambda:GetLayerVersion",
                "s3:ListBucket",
                "sns:GetSubscriptionAttributes"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudComputeDiscovery1",
              "Effect": "Allow",
              "Action": [
                "apigateway:GET",
                "cloudfront:ListDistributions",
                "cloudwatch:DescribeAlarms",
                "ec2:DescribeTags",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeTargetGroups",
                "events:ListRules",
                "iam:GetPolicy",
                "iam:GetPolicyVersion",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:ListAttachedRolePolicies",
                "iam:ListRolePolicies",
                "kms:Decrypt",
                "lambda:GetFunction",
                "lambda:GetFunctionConfiguration",
                "lambda:GetFunctionUrlConfig",
                "lambda:GetPolicy",
                "lambda:ListAliases",
                "lambda:ListEventSourceMappings",
                "lambda:ListFunctions",
                "logs:DescribeSubscriptionFilters",
                "s3:GetBucketNotification",
                "secretsmanager:GetSecretValue",
                "ssm:GetParameter"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudConfig4",
              "Effect": "Allow",
              "Action": [
                "storagegateway:ListVolumes",
                "support:DescribeCases",
                "swf:ListDomains",
                "transcribe:ListLanguageModels",
                "transcribe:ListTagsForResource",
                "transfer:DescribeAccess",
                "transfer:DescribeServer",
                "transfer:DescribeUser",
                "transfer:ListAccesses",
                "transfer:ListServers",
                "transfer:ListUsers",
                "translate:GetTerminology",
                "translate:ListTerminologies",
                "waf-regional:GetLoggingConfiguration",
                "waf-regional:GetWebACL",
                "waf-regional:ListResourcesForWebACL",
                "waf-regional:ListTagsForResource",
                "waf-regional:ListWebACLs",
                "waf:GetLoggingConfiguration",
                "waf:GetWebACL",
                "waf:ListTagsForResource",
                "waf:ListWebACLs",
                "wafv2:GetLoggingConfiguration",
                "wafv2:GetWebACL",
                "wafv2:ListResourcesForWebACL",
                "wafv2:ListRuleGroups",
                "wafv2:ListTagsForResource",
                "wafv2:ListWebACLs",
                "workspaces:DescribeIpGroups",
                "workspaces:DescribeTags",
                "workspaces:DescribeWorkspaceBundles",
                "workspaces:DescribeWorkspaceDirectories",
                "workspaces:DescribeWorkspaces",
                "xray:GetEncryptionConfig"
              ],
              "Resource": "*"
            },
            {
              "Sid": "PrismaCloudComputeAutoProtect1",
              "Effect": "Allow",
              "Action": [
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeImages",
                "ec2:DescribeInstanceTypeOfferings",
                "ec2:DescribeInstances",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVpcs",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RunInstances",
                "ec2:TerminateInstances",
                "ecr:BatchCheckLayerAvailability",
                "ecr:BatchGetImage",
                "ecr:DescribeImageScanFindings",
                "ecr:DescribeImages",
                "ecr:DescribeRepositories",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetLifecyclePolicy",
                "ecr:GetLifecyclePolicyPreview",
                "ecr:GetRepositoryPolicy",
                "ecr:ListImages",
                "ecr:ListTagsForResource",
                "lambda:GetFunctionConfiguration",
                "lambda:GetLayerVersion",
                "logs:GetQueryResults",
                "logs:StartQuery",
                "securityhub:BatchImportFindings",
                "ssm:CancelCommand",
                "ssm:CreateAssociation",
                "ssm:DescribeInstanceInformation",
                "ssm:ListCommandInvocations",
                "ssm:SendCommand"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    },
    "prismacloud3": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": {
          "Fn::Join": [
            "",
            [
              "prisma_cloud_3-1176399931679034368",
              "-",
              {
                "Ref": "PrismaCloudRoleName"
              }
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PrismaCloudConfig1",
              "Effect": "Allow",
              "Action": [
                "access-analyzer:GetAnalyzer",
                "access-analyzer:ListAnalyzers",
                "account:GetAlternateContact",
                "acm-pca:GetPolicy",
                "acm-pca:ListCertificateAuthorities",
                "acm-pca:ListTags",
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:ListTagsForCertificate",
                "airflow:GetEnvironment",
                "airflow:ListEnvironments",
                "amplify:ListApps",
                "apigateway:GET",
                "appflow:DescribeFlow",
                "appflow:ListFlows",
                "appmesh:DescribeMesh",
                "appmesh:DescribeVirtualGateway",
                "appmesh:ListMeshes",
                "appmesh:ListTagsForResource",
                "appmesh:ListVirtualGateways",
                "apprunner:DescribeAutoScalingConfiguration",
                "apprunner:DescribeCustomDomains",
                "apprunner:DescribeService",
                "apprunner:ListAutoScalingConfigurations",
                "apprunner:ListServices",
                "apprunner:ListTagsForResource",
                "appstream:DescribeFleets",
                "appstream:DescribeImages",
                "appstream:DescribeStacks",
                "appstream:DescribeUsageReportSubscriptions",
                "appstream:ListTagsForResource",
                "appsync:GetGraphqlApi",
                "appsync:ListGraphqlApis",
                "aps:DescribeLoggingConfiguration",
                "aps:ListWorkspaces",
                "athena:GetWorkGroup",
                "athena:ListWorkGroups",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeLaunchConfigurations",
                "backup:GetBackupPlan",
                "backup:GetBackupVaultAccessPolicy",
                "backup:ListBackupPlans",
                "backup:ListBackupVaults",
                "backup:ListTags",
                "batch:DescribeComputeEnvironments",
                "ce:GetCostAndUsage",
                "chime:GetVoiceConnectorLoggingConfiguration",
                "chime:ListVoiceConnectors",
                "cloud9:DescribeEnvironmentMemberships",
                "cloud9:DescribeEnvironments",
                "cloud9:ListEnvironments",
                "cloud9:ListTagsForResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:DescribeStacks",
                "cloudformation:GetStackPolicy",
                "cloudformation:GetTemplate",
                "cloudformation:ListStackResources",
                "cloudformation:ListStacks",
                "cloudfront:GetDistribution",
                "cloudfront:GetDistributionConfig",
                "cloudfront:ListDistributions",
                "cloudfront:ListOriginAccessControls",
                "cloudfront:ListTagsForResource",
                "cloudhsm:DescribeClusters",
                "cloudsearch:DescribeDomains",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetEventSelectors",
                "cloudtrail:GetTrailStatus",
                "cloudtrail:ListTags",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:DescribeInsightRules",
                "cloudwatch:ListTagsForResource",
                "codeartifact:DescribeDomain",
                "codeartifact:DescribeRepository",
                "codeartifact:GetDomainPermissionsPolicy",
                "codeartifact:GetRepositoryPermissionsPolicy",
                "codeartifact:ListDomains",
                "codeartifact:ListRepositories",
                "codeartifact:ListTagsForResource",
                "codebuild:BatchGetProjects",
                "codebuild:ListProjects",
                "codepipeline:GetPipeline",
                "codepipeline:ListPipelines",
                "codepipeline:ListTagsForResource",
                "cognito-identity:DescribeIdentityPool",
                "cognito-identity:ListIdentityPools",
                "cognito-identity:ListTagsForResource",
                "cognito-idp:ListResourcesForWebACL",
                "cognito-idp:ListTagsForResource",
                "cognito-idp:ListUserPools",
                "cognito-sync:ListIdentityPoolUsage",
                "comprehend:ListEntitiesDetectionJobs",
                "comprehendmedical:ListEntitiesDetectionV2Jobs",
                "config:DescribeConfigRules",
                "config:DescribeConfigurationRecorderStatus",
                "config:DescribeConfigurationRecorders",
                "config:DescribeDeliveryChannels",
                "config:GetComplianceDetailsByConfigRule",
                "config:ListTagsForResource",
                "connect:ListInstanceAttributes",
                "connect:ListInstanceStorageConfigs",
                "connect:ListInstances",
                "databrew:DescribeJob",
                "databrew:ListJobs",
                "datapipeline:DescribePipelines",
                "datapipeline:GetPipelineDefinition",
                "datapipeline:ListPipelines",
                "datasync:DescribeLocationEfs",
                "datasync:DescribeLocationFsxLustre",
                "datasync:DescribeLocationFsxOntap",
                "datasync:DescribeLocationFsxOpenZfs",
                "datasync:DescribeLocationFsxWindows",
                "datasync:DescribeLocationHdfs",
                "datasync:DescribeLocationNfs",
                "datasync:DescribeLocationObjectStorage",
                "datasync:DescribeLocationS3",
                "datasync:DescribeLocationSmb",
                "datasync:ListLocations",
                "datasync:ListTagsForResource",
                "datasync:ListTasks",
                "dax:DescribeClusters",
                "dax:DescribeParameterGroups",
                "dax:DescribeParameters",
                "dax:ListTags",
                "devicefarm:ListProjects",
                "devops-guru:DescribeServiceIntegration",
                "directconnect:DescribeConnections",
                "directconnect:DescribeDirectConnectGateways",
                "directconnect:DescribeVirtualInterfaces",
                "dms:DescribeCertificates",
                "dms:DescribeEndpoints",
                "dms:DescribeReplicationInstances",
                "dms:ListTagsForResource",
                "ds:DescribeDirectories",
                "ds:ListTagsForResource",
                "dynamodb:DescribeTable",
                "dynamodb:ListTables",
                "dynamodb:ListTagsOfResource",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeClientVpnAuthorizationRules",
                "ec2:DescribeClientVpnEndpoints",
                "ec2:DescribeCustomerGateways",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeFlowLogs",
                "ec2:DescribeImages",
                "ec2:DescribeInstanceAttribute",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInstances",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeKeyPairs",
                "ec2:DescribeManagedPrefixLists",
                "ec2:DescribeNatGateways",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeNetworkInterfaceAttribute",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeRegions",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSnapshotAttribute",
                "ec2:DescribeSnapshots",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeTrafficMirrorSessions",
                "ec2:DescribeTransitGatewayAttachments",
                "ec2:DescribeTransitGatewayRouteTables",
                "ec2:DescribeTransitGatewayVpcAttachments",
                "ec2:DescribeTransitGateways",
                "ec2:DescribeVolumes",
                "ec2:DescribeVpcEndpointServiceConfigurations",
                "ec2:DescribeVpcEndpointServicePermissions",
                "ec2:DescribeVpcEndpointServices",
                "ec2:DescribeVpcEndpoints",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpnConnections",
                "ec2:DescribeVpnGateways",
                "ec2:GetEbsEncryptionByDefault",
                "ec2:GetManagedPrefixListEntries",
                "ec2:SearchTransitGatewayRoutes"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    },
    "prismacloud4": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": {
          "Fn::Join": [
            "",
            [
              "prisma_cloud_4-1176399931679034368",
              "-",
              {
                "Ref": "PrismaCloudRoleName"
              }
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PrismaCloudConfig2",
              "Effect": "Allow",
              "Action": [
                "ecr-public:DescribeRepositories",
                "ecr-public:GetRepositoryCatalogData",
                "ecr-public:GetRepositoryPolicy",
                "ecr-public:ListTagsForResource",
                "ecr:DescribeImages",
                "ecr:DescribePullThroughCacheRules",
                "ecr:DescribeRegistry",
                "ecr:DescribeRepositories",
                "ecr:GetLifecyclePolicy",
                "ecr:GetRegistryPolicy",
                "ecr:GetRegistryScanningConfiguration",
                "ecr:GetRepositoryPolicy",
                "ecr:ListTagsForResource",
                "ecs:DescribeClusters",
                "ecs:DescribeContainerInstances",
                "ecs:DescribeServices",
                "ecs:DescribeTaskDefinition",
                "ecs:DescribeTasks",
                "ecs:ListClusters",
                "ecs:ListContainerInstances",
                "ecs:ListServices",
                "ecs:ListTagsForResource",
                "ecs:ListTaskDefinitions",
                "ecs:ListTasks",
                "eks:DescribeCluster",
                "eks:DescribeFargateProfile",
                "eks:DescribeNodegroup",
                "eks:ListClusters",
                "eks:ListFargateProfiles",
                "eks:ListNodegroups",
                "eks:ListTagsForResource",
                "elasticache:DescribeCacheClusters",
                "elasticache:DescribeCacheEngineVersions",
                "elasticache:DescribeCacheSubnetGroups",
                "elasticache:DescribeReplicationGroups",
                "elasticache:DescribeReservedCacheNodes",
                "elasticache:DescribeSnapshots",
                "elasticache:DescribeUsers",
                "elasticache:ListTagsForResource",
                "elasticbeanstalk:DescribeApplications",
                "elasticbeanstalk:DescribeConfigurationSettings",
                "elasticbeanstalk:DescribeEnvironmentResources",
                "elasticbeanstalk:DescribeEnvironments",
                "elasticbeanstalk:ListTagsForResource",
                "elasticfilesystem:DescribeFileSystemPolicy",
                "elasticfilesystem:DescribeFileSystems",
                "elasticfilesystem:DescribeMountTargetSecurityGroups",
                "elasticfilesystem:DescribeMountTargets",
                "elasticfilesystem:DescribeTags",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeLoadBalancerPolicies",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticmapreduce:DescribeCluster",
                "elasticmapreduce:DescribeSecurityConfiguration",
                "elasticmapreduce:GetBlockPublicAccessConfiguration",
                "elasticmapreduce:ListClusters",
                "elasticmapreduce:ListSecurityConfigurations",
                "elastictranscoder:ListPipelines",
                "es:DescribeElasticsearchDomains",
                "es:ListDomainNames",
                "es:ListTags",
                "events:ListEventBuses",
                "events:ListRules",
                "events:ListTagsForResource",
                "events:ListTargetsByRule",
                "firehose:DescribeDeliveryStream",
                "firehose:ListDeliveryStreams",
                "firehose:ListTagsForDeliveryStream",
                "fms:GetAdminAccount",
                "fms:GetPolicy",
                "fms:ListComplianceStatus",
                "fms:ListPolicies",
                "forecast:DescribeAutoPredictor",
                "forecast:DescribeDataset",
                "forecast:DescribePredictor",
                "forecast:ListDatasets",
                "forecast:ListPredictors",
                "forecast:ListTagsForResource",
                "fsx:DescribeFileSystems",
                "glacier:GetVaultAccessPolicy",
                "glacier:GetVaultLock",
                "glacier:ListTagsForVault",
                "glacier:ListVaults",
                "globalaccelerator:DescribeAcceleratorAttributes",
                "globalaccelerator:ListAccelerators",
                "globalaccelerator:ListTagsForResource",
                "glue:GetConnection",
                "glue:GetConnections",
                "glue:GetDataCatalogEncryptionSettings",
                "glue:GetDatabases",
                "glue:GetSecurityConfigurations",
                "grafana:DescribeWorkspace",
                "grafana:DescribeWorkspaceAuthentication",
                "grafana:ListWorkspaces",
                "greengrass:ListCoreDefinitions",
                "greengrass:ListGroups",
                "guardduty:GetDetector",
                "guardduty:GetFindings",
                "guardduty:GetMasterAccount",
                "guardduty:ListDetectors",
                "guardduty:ListFindings",
                "iam:GenerateCredentialReport",
                "iam:GenerateServiceLastAccessedDetails",
                "iam:GetAccountAuthorizationDetails",
                "iam:GetAccountPasswordPolicy",
                "iam:GetAccountSummary",
                "iam:GetCredentialReport",
                "iam:GetGroupPolicy",
                "iam:GetOpenIDConnectProvider",
                "iam:GetPolicyVersion",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:GetSAMLProvider",
                "iam:GetServiceLastAccessedDetails",
                "iam:GetUserPolicy",
                "iam:ListAccessKeys",
                "iam:ListAttachedGroupPolicies",
                "iam:ListAttachedRolePolicies",
                "iam:ListAttachedUserPolicies",
                "iam:ListEntitiesForPolicy",
                "iam:ListGroupPolicies",
                "iam:ListGroups",
                "iam:ListGroupsForUser",
                "iam:ListInstanceProfilesForRole",
                "iam:ListMFADeviceTags",
                "iam:ListMFADevices",
                "iam:ListOpenIDConnectProviders",
                "iam:ListPolicies",
                "iam:ListPolicyTags",
                "iam:ListPolicyVersions",
                "iam:ListRolePolicies",
                "iam:ListRoleTags",
                "iam:ListRoles",
                "iam:ListSAMLProviderTags",
                "iam:ListSAMLProviders",
                "iam:ListSSHPublicKeys",
                "iam:ListServerCertificateTags",
                "iam:ListServerCertificates",
                "iam:ListUserPolicies",
                "iam:ListUserTags",
                "iam:ListUsers",
                "iam:ListVirtualMFADevices",
                "identitystore:ListGroupMemberships",
                "identitystore:ListGroups",
                "identitystore:ListUsers",
                "inspector2:ListAccountPermissions",
                "inspector2:ListCoverage",
                "inspector2:ListFilters",
                "inspector2:ListFindings",
                "inspector:DescribeAssessmentTemplates",
                "inspector:DescribeFindings",
                "inspector:DescribeRulesPackages",
                "inspector:ListAssessmentRunAgents",
                "inspector:ListAssessmentRuns",
                "inspector:ListAssessmentTemplates",
                "inspector:ListFindings",
                "inspector:ListRulesPackages",
                "iot:DescribeAccountAuditConfiguration",
                "iot:DescribeDomainConfiguration",
                "iot:ListDomainConfigurations",
                "iot:ListTagsForResource",
                "iotanalytics:ListChannels",
                "iotanalytics:ListDatastores",
                "iotanalytics:ListTagsForResource",
                "iotevents:ListInputs",
                "iotfleetwise:ListSignalCatalogs",
                "kafka:ListClusters",
                "kendra:DescribeIndex",
                "kendra:ListTagsForResource",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:ListTagsForStream",
                "kinesisanalytics:DescribeApplication",
                "kinesisanalytics:ListApplications",
                "kinesisanalytics:ListTagsForResource",
                "kinesisvideo:DescribeNotificationConfiguration",
                "kinesisvideo:ListStreams",
                "kinesisvideo:ListTagsForStream",
                "kms:DescribeKey",
                "kms:GetKeyPolicy"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    },
    "prismacloud5": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "ManagedPolicyName": {
          "Fn::Join": [
            "",
            [
              "prisma_cloud_5-1176399931679034368",
              "-",
              {
                "Ref": "PrismaCloudRoleName"
              }
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PrismaCloudConfig3",
              "Effect": "Allow",
              "Action": [
                "kms:GetKeyRotationStatus",
                "kms:ListAliases",
                "kms:ListKeyPolicies",
                "kms:ListKeys",
                "kms:ListResourceTags",
                "lakeformation:GetDataLakeSettings",
                "lambda:GetFunctionUrlConfig",
                "lambda:GetLayerVersionPolicy",
                "lambda:GetPolicy",
                "lambda:ListCodeSigningConfigs",
                "lambda:ListFunctions",
                "lambda:ListLayerVersions",
                "lambda:ListLayers",
                "lambda:ListTags",
                "lex:DescribeBot",
                "lex:DescribeBotVersion",
                "lex:GetBot",
                "lex:GetBotVersions",
                "lex:GetBots",
                "lex:ListBotVersions",
                "lex:ListBots",
                "lex:ListTagsForResource",
                "lightsail:GetInstances",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:DescribeMetricFilters",
                "logs:DescribeSubscriptionFilters",
                "logs:GetLogEvents",
                "logs:ListTagsLogGroup",
                "lookoutequipment:ListDatasets",
                "lookoutmetrics:ListAnomalyDetectors",
                "lookoutvision:ListProjects",
                "macie2:GetClassificationExportConfiguration",
                "macie2:GetFindingsPublicationConfiguration",
                "macie2:GetMacieSession",
                "macie2:GetRevealConfiguration",
                "macie2:ListOrganizationAdminAccounts",
                "managedblockchain:ListNetworks",
                "mediastore:GetContainerPolicy",
                "mediastore:GetCorsPolicy",
                "mediastore:ListContainers",
                "mediastore:ListTagsForResource",
                "memorydb:DescribeClusters",
                "memorydb:DescribeParameterGroups",
                "memorydb:DescribeParameters",
                "memorydb:ListTags",
                "mobiletargeting:GetApps",
                "mobiletargeting:GetEmailChannel",
                "mobiletargeting:GetSmsChannel",
                "mq:DescribeBroker",
                "mq:ListBrokers",
                "network-firewall:DescribeFirewall",
                "network-firewall:DescribeFirewallPolicy",
                "network-firewall:DescribeResourcePolicy",
                "network-firewall:ListFirewallPolicies",
                "network-firewall:ListFirewalls",
                "opsworks:DescribeUserProfiles",
                "organizations:DescribeAccount",
                "organizations:DescribeOrganization",
                "polly:DescribeVoices",
                "qldb:DescribeLedger",
                "qldb:ListLedgers",
                "qldb:ListTagsForResource",
                "quicksight:DescribeAccountSettings",
                "quicksight:ListDataSets",
                "quicksight:ListDataSources",
                "quicksight:ListTagsForResource",
                "ram:GetResourceShares",
                "ram:ListPrincipals",
                "ram:ListResources",
                "rds:DescribeDBClusterParameterGroups",
                "rds:DescribeDBClusterParameters",
                "rds:DescribeDBClusterSnapshotAttributes",
                "rds:DescribeDBClusterSnapshots",
                "rds:DescribeDBClusters",
                "rds:DescribeDBInstances",
                "rds:DescribeDBParameterGroups",
                "rds:DescribeDBParameters",
                "rds:DescribeDBSnapshotAttributes",
                "rds:DescribeDBSnapshots",
                "rds:DescribeEventSubscriptions",
                "rds:DescribeOptionGroups",
                "rds:ListTagsForResource",
                "redshift:DescribeClusterParameters",
                "redshift:DescribeClusters",
                "redshift:DescribeLoggingStatus",
                "resiliencehub:ListApps",
                "route53:ListHostedZones",
                "route53:ListQueryLoggingConfigs",
                "route53:ListResourceRecordSets",
                "route53:ListTagsForResource",
                "route53domains:GetDomainDetail",
                "route53domains:ListDomains",
                "route53domains:ListTagsForDomain",
                "route53resolver:ListResolverQueryLogConfigAssociations",
                "route53resolver:ListResolverQueryLogConfigs",
                "route53resolver:ListTagsForResource",
                "s3:DescribeJob",
                "s3:GetAccessPoint",
                "s3:GetAccessPointPolicy",
                "s3:GetAccessPointPolicyStatus",
                "s3:GetAccountPublicAccessBlock",
                "s3:GetBucketAcl",
                "s3:GetBucketCORS",
                "s3:GetBucketLocation",
                "s3:GetBucketLogging",
                "s3:GetBucketOwnershipControls",
                "s3:GetBucketPolicy",
                "s3:GetBucketPolicyStatus",
                "s3:GetBucketPublicAccessBlock",
                "s3:GetBucketTagging",
                "s3:GetBucketVersioning",
                "s3:GetBucketWebsite",
                "s3:GetEncryptionConfiguration",
                "s3:GetJobTagging",
                "s3:GetLifecycleConfiguration",
                "s3:GetReplicationConfiguration",
                "s3:ListAccessPoints",
                "s3:ListAllMyBuckets",
                "s3:ListJobs",
                "sagemaker:DescribeDomain",
                "sagemaker:DescribeEndpoint",
                "sagemaker:DescribeEndpointConfig",
                "sagemaker:DescribeModel",
                "sagemaker:DescribeNotebookInstance",
                "sagemaker:DescribeTrainingJob",
                "sagemaker:DescribeUserProfile",
                "sagemaker:ListDomains",
                "sagemaker:ListEndpointConfigs",
                "sagemaker:ListEndpoints",
                "sagemaker:ListModels",
                "sagemaker:ListNotebookInstances",
                "sagemaker:ListTags",
                "sagemaker:ListTrainingJobs",
                "sagemaker:ListUserProfiles",
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:ListSecrets",
                "securityhub:DescribeStandards",
                "securityhub:GetEnabledStandards",
                "serverlessrepo:GetApplicationPolicy",
                "serverlessrepo:ListApplications",
                "servicecatalog:ListApplications",
                "servicecatalog:ListAttributeGroups",
                "servicecatalog:ListPortfolios",
                "servicediscovery:ListNamespaces",
                "ses:GetIdentityDkimAttributes",
                "ses:GetIdentityPolicies",
                "ses:GetIdentityVerificationAttributes",
                "ses:ListIdentities",
                "ses:ListIdentityPolicies",
                "shield:DescribeDRTAccess",
                "shield:GetSubscriptionState",
                "shield:ListProtectionGroups",
                "shield:ListProtections",
                "shield:ListResourcesInProtectionGroup",
                "shield:ListTagsForResource",
                "sns:GetTopicAttributes",
                "sns:ListPlatformApplications",
                "sns:ListSubscriptions",
                "sns:ListTagsForResource",
                "sns:ListTopics",
                "sqs:GetQueueAttributes",
                "sqs:ListQueueTags",
                "sqs:ListQueues",
                "ssm:DescribeAssociation",
                "ssm:DescribeDocument",
                "ssm:DescribeDocumentPermission",
                "ssm:DescribeInstanceInformation",
                "ssm:DescribeParameters",
                "ssm:GetDocument",
                "ssm:GetInventory",
                "ssm:GetParameters",
                "ssm:ListAssociations",
                "ssm:ListDocuments",
                "ssm:ListResourceComplianceSummaries",
                "ssm:ListTagsForResource",
                "sso:DescribePermissionSet",
                "sso:ListAccountAssignments",
                "sso:ListAccountsForProvisionedPermissionSet",
                "sso:ListInstances",
                "sso:ListPermissionSets",
                "states:DescribeStateMachine",
                "states:ListStateMachines",
                "states:ListTagsForResource",
                "storagegateway:DescribeCachediSCSIVolumes",
                "storagegateway:DescribeGatewayInformation",
                "storagegateway:DescribeNFSFileShares",
                "storagegateway:DescribeSMBFileShares",
                "storagegateway:DescribeSMBSettings",
                "storagegateway:DescribeTapes",
                "storagegateway:ListFileShares",
                "storagegateway:ListGateways",
                "storagegateway:ListTapes"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "PrismaCloudRoleARN": {
      "Description": "Information about the value",
      "Value": {
        "Fn::GetAtt": [
          "PrismaCloudRole",
          "Arn"
        ]
      }
    }
  }
}